Learning Go
Through Illustrations

Trevor Forrey
Job title, Company
joe@example.com
http://trevorforrey.com
@tforrey

* Go What?
.image ./imgs/gopher.png _ 300

- Opinionated
- Dependencies built-in binaries
- Concurrency Primitives

* Go Where?

.image ./imgs/docker-logo.png _ 150
.image ./imgs/kubernetes.svg _ 150
.image ./imgs/mozilla.png _ 150
.image ./imgs/twitch.png _ 150

* Background - Single Threaded vs. Multi Threaded
- Single Threaded: One function after another
- Multi-Threaded: independent functions share resources

.image ./imgs/WorkingGopher.jpg _ 500

* One Gopher Architecture
.image ./imgs/single_arch.jpg _ 950

* One Gopher Code
.play ./exec/singleThreaded.go /^func main/,/^}/

* Multi Gophered Architecture
.image ./imgs/independent_arch.jpg _ 950

* Tools We'll Need
- A way to create Gophers
- A way to communicate between Gophers

* Go Routines
.image ./imgs/eggsGopher.jpg _ 950

* Two Gophers, One Mine
.play ./exec/twoFinders.go /^func main/,/^}/

* Current Status
- Create multiple threads easily
- Even more lightweight that a normal 'thread'
- But How will we communicate between gophers?

* Channels
.image ./imgs/gopher_cans.jpg _ 900

* Channel Creation
.image ./imgs/channel.jpg _ 900
.code ./examples/firstChannel.go /^func main/,/^}/


* Sending / Receiving on Channels
.image ./imgs/channek_send.jpg _ 900
.code ./examples/firstChannelSend.go /^func main/,/^}/

* Anonymous Go Routines
.image ./imgs/bigAnonGopher.jpg _ 700
.code ./examples/anonymous.go /^func main/,/^}/

* Example of sending / receiving on a channel
.play ./exec/exampleSendReceive.go /^func main/,/^}/


* Channel Blocking
- Allows go routines to 'sync' back up

* Blocking on a Send
.image ./imgs/blockOnSend.jpg _ 900
.play ./exec/blockOnSend.go /^func main/,/^}/


* Blocking on a Receive
.image ./imgs/blockonRec.jpg _ 900
.play ./exec/blockOnReceive.go /^func main/,/^}/


* Unbuffered Channels
.image ./imgs/bigoneChannel.jpg _ 900
.code ./examples/firstChannel.go /^func main/,/^}/


* Buffered Channels
.image ./imgs/bigmultiChannel.jpg _ 900
.code ./examples/bufferedChannel.go /^func main/,/^}/

* Buffered Channels cont
.image ./imgs/channel_sends.jpg _ 900

* Buffered Channels Example
- Example code of non-blocking buffered channels

* Putting it all Together
.image ./imgs/independent_arch.jpg _ 950

* Passing in / returning a channel
.code ./exec/passInAndReturnChannel.go /^func gen/,/^}/

* Passing in / returning a channel contd
.code ./exec/passInAndReturnChannel.go /^func finder/,/^}/

* Passing in / returning a channel example
.play ./exec/passInAndReturnChannel.go /^func main/,/^}/

* Full Program
.play ./exec/allTogether.go /^func main/,/^}/

* Main Function is a Go Routine
.image ./imgs/mainGopher.jpg _ 900
.play ./exec/mainGopherExample.go /^func main/,/^}/

* Better ways than time out
.image ./imgs/imdonegopher.jpg _ 700
.code ./examples/imdone.go /^func main/,/^}/


* You can range over a channel
- Read values as they come in

* Non-blocking reads / writes
- Code of select / default example

* Where to learn next
.image ./imgs/ReadingGopher.jpg _ 600
.link https://gobyexample.com/ Go by Example
.link https://www.youtube.com/watch?v=cN_DpYBzKso Rob Pike - 'Concurrency Is Not Parallelism'
.link https://www.youtube.com/watch?v=f6kdp27TYZs&t=938s Google I/O 2012 — Go Concurrency Patterns




* os.Exec
